# frozen_string_literal: true
require_relative "address"
require_relative "order"
require_relative "additional_recipient"
require "ostruct"
require "json"

module SquareApiClient
# Square Checkout lets merchants accept online payments for supported
#  payment types using a checkout workflow hosted on squareup.com.
  class Checkout
  # @return [String] ID generated by Square Checkout when a new checkout is requested.
    attr_reader :id
  # @return [String] The URL that the buyer's browser should be redirected to after the
#  checkout is completed.
    attr_reader :checkout_page_url
  # @return [Boolean] If `true`, Square Checkout will collect shipping information on your
#  behalf and store that information with the transaction information in your
#  Square Dashboard.
#  Default: `false`.
    attr_reader :ask_for_shipping_address
  # @return [String] The email address to display on the Square Checkout confirmation page
#  and confirmation email that the buyer can use to contact the merchant.
#  If this value is not set, the confirmation page and email will display the
#  primary email address associated with the merchant's Square account.
#  Default: none; only exists if explicitly set.
    attr_reader :merchant_support_email
  # @return [String] If provided, the buyer's email is pre-populated on the checkout page
#  as an editable text field.
#  Default: none; only exists if explicitly set.
    attr_reader :pre_populate_buyer_email
  # @return [SquareApiClient::Address] If provided, the buyer's shipping info is pre-populated on the
#  checkout page as editable text fields.
#  Default: none; only exists if explicitly set.
    attr_reader :pre_populate_shipping_address
  # @return [String] The URL to redirect to after checkout is completed with `checkoutId`,
#  Square's `orderId`, `transactionId`, and `referenceId` appended as URL
#  parameters. For example, if the provided redirect_url is
#  `http://www.example.com/order-complete`, a successful transaction redirects
#  the customer to:
#  &amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>
#  If you do not provide a redirect URL, Square Checkout will display an order
#  confirmation page on your behalf; however Square strongly recommends that
#  you provide a redirect URL so you can verify the transaction results and
#  finalize the order through your existing/normal confirmation workflow.
    attr_reader :redirect_url
  # @return [SquareApiClient::Order] Order to be checked out.
    attr_reader :order
  # @return [String] The time when the checkout was created, in RFC 3339 format.
    attr_reader :created_at
  # @return [Array<SquareApiClient::AdditionalRecipient>] Additional recipients (other than the merchant) receiving a portion of this
#  checkout.
#  For example, fees assessed on the purchase by a third party integration.
    attr_reader :additional_recipients
  # @return [OpenStruct] Additional properties unmapped to the current class definition
    attr_reader :additional_properties
  # @return [Object] 
    attr_reader :_field_set
    protected :_field_set

    OMIT = Object.new

    # @param id [String] ID generated by Square Checkout when a new checkout is requested.
    # @param checkout_page_url [String] The URL that the buyer's browser should be redirected to after the
#  checkout is completed.
    # @param ask_for_shipping_address [Boolean] If `true`, Square Checkout will collect shipping information on your
#  behalf and store that information with the transaction information in your
#  Square Dashboard.
#  Default: `false`.
    # @param merchant_support_email [String] The email address to display on the Square Checkout confirmation page
#  and confirmation email that the buyer can use to contact the merchant.
#  If this value is not set, the confirmation page and email will display the
#  primary email address associated with the merchant's Square account.
#  Default: none; only exists if explicitly set.
    # @param pre_populate_buyer_email [String] If provided, the buyer's email is pre-populated on the checkout page
#  as an editable text field.
#  Default: none; only exists if explicitly set.
    # @param pre_populate_shipping_address [SquareApiClient::Address] If provided, the buyer's shipping info is pre-populated on the
#  checkout page as editable text fields.
#  Default: none; only exists if explicitly set.
    # @param redirect_url [String] The URL to redirect to after checkout is completed with `checkoutId`,
#  Square's `orderId`, `transactionId`, and `referenceId` appended as URL
#  parameters. For example, if the provided redirect_url is
#  `http://www.example.com/order-complete`, a successful transaction redirects
#  the customer to:
#  &amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>
#  If you do not provide a redirect URL, Square Checkout will display an order
#  confirmation page on your behalf; however Square strongly recommends that
#  you provide a redirect URL so you can verify the transaction results and
#  finalize the order through your existing/normal confirmation workflow.
    # @param order [SquareApiClient::Order] Order to be checked out.
    # @param created_at [String] The time when the checkout was created, in RFC 3339 format.
    # @param additional_recipients [Array<SquareApiClient::AdditionalRecipient>] Additional recipients (other than the merchant) receiving a portion of this
#  checkout.
#  For example, fees assessed on the purchase by a third party integration.
    # @param additional_properties [OpenStruct] Additional properties unmapped to the current class definition
    # @return [SquareApiClient::Checkout]
    def initialize(id: OMIT, checkout_page_url: OMIT, ask_for_shipping_address: OMIT, merchant_support_email: OMIT, pre_populate_buyer_email: OMIT, pre_populate_shipping_address: OMIT, redirect_url: OMIT, order: OMIT, created_at: OMIT, additional_recipients: OMIT, additional_properties: nil)
      @id = id if id != OMIT
      @checkout_page_url = checkout_page_url if checkout_page_url != OMIT
      @ask_for_shipping_address = ask_for_shipping_address if ask_for_shipping_address != OMIT
      @merchant_support_email = merchant_support_email if merchant_support_email != OMIT
      @pre_populate_buyer_email = pre_populate_buyer_email if pre_populate_buyer_email != OMIT
      @pre_populate_shipping_address = pre_populate_shipping_address if pre_populate_shipping_address != OMIT
      @redirect_url = redirect_url if redirect_url != OMIT
      @order = order if order != OMIT
      @created_at = created_at if created_at != OMIT
      @additional_recipients = additional_recipients if additional_recipients != OMIT
      @additional_properties = additional_properties
      @_field_set = { "id": id, "checkout_page_url": checkout_page_url, "ask_for_shipping_address": ask_for_shipping_address, "merchant_support_email": merchant_support_email, "pre_populate_buyer_email": pre_populate_buyer_email, "pre_populate_shipping_address": pre_populate_shipping_address, "redirect_url": redirect_url, "order": order, "created_at": created_at, "additional_recipients": additional_recipients }.reject do | _k, v |
  v == OMIT
end
    end
# Deserialize a JSON object to an instance of Checkout
    #
    # @param json_object [String] 
    # @return [SquareApiClient::Checkout]
    def self.from_json(json_object:)
      struct = JSON.parse(json_object, object_class: OpenStruct)
      parsed_json = JSON.parse(json_object)
      id = parsed_json["id"]
      checkout_page_url = parsed_json["checkout_page_url"]
      ask_for_shipping_address = parsed_json["ask_for_shipping_address"]
      merchant_support_email = parsed_json["merchant_support_email"]
      pre_populate_buyer_email = parsed_json["pre_populate_buyer_email"]
      unless parsed_json["pre_populate_shipping_address"].nil?
        pre_populate_shipping_address = parsed_json["pre_populate_shipping_address"].to_json
        pre_populate_shipping_address = SquareApiClient::Address.from_json(json_object: pre_populate_shipping_address)
      else
        pre_populate_shipping_address = nil
      end
      redirect_url = parsed_json["redirect_url"]
      unless parsed_json["order"].nil?
        order = parsed_json["order"].to_json
        order = SquareApiClient::Order.from_json(json_object: order)
      else
        order = nil
      end
      created_at = parsed_json["created_at"]
      additional_recipients = parsed_json["additional_recipients"]&.map do | item |
  item = item.to_json
  SquareApiClient::AdditionalRecipient.from_json(json_object: item)
end
      new(
        id: id,
        checkout_page_url: checkout_page_url,
        ask_for_shipping_address: ask_for_shipping_address,
        merchant_support_email: merchant_support_email,
        pre_populate_buyer_email: pre_populate_buyer_email,
        pre_populate_shipping_address: pre_populate_shipping_address,
        redirect_url: redirect_url,
        order: order,
        created_at: created_at,
        additional_recipients: additional_recipients,
        additional_properties: struct
      )
    end
# Serialize an instance of Checkout to a JSON object
    #
    # @return [String]
    def to_json
      @_field_set&.to_json
    end
# Leveraged for Union-type generation, validate_raw attempts to parse the given
#  hash and check each fields type against the current object's property
#  definitions.
    #
    # @param obj [Object] 
    # @return [Void]
    def self.validate_raw(obj:)
      obj.id&.is_a?(String) != false || raise("Passed value for field obj.id is not the expected type, validation failed.")
      obj.checkout_page_url&.is_a?(String) != false || raise("Passed value for field obj.checkout_page_url is not the expected type, validation failed.")
      obj.ask_for_shipping_address&.is_a?(Boolean) != false || raise("Passed value for field obj.ask_for_shipping_address is not the expected type, validation failed.")
      obj.merchant_support_email&.is_a?(String) != false || raise("Passed value for field obj.merchant_support_email is not the expected type, validation failed.")
      obj.pre_populate_buyer_email&.is_a?(String) != false || raise("Passed value for field obj.pre_populate_buyer_email is not the expected type, validation failed.")
      obj.pre_populate_shipping_address.nil? || SquareApiClient::Address.validate_raw(obj: obj.pre_populate_shipping_address)
      obj.redirect_url&.is_a?(String) != false || raise("Passed value for field obj.redirect_url is not the expected type, validation failed.")
      obj.order.nil? || SquareApiClient::Order.validate_raw(obj: obj.order)
      obj.created_at&.is_a?(String) != false || raise("Passed value for field obj.created_at is not the expected type, validation failed.")
      obj.additional_recipients&.is_a?(Array) != false || raise("Passed value for field obj.additional_recipients is not the expected type, validation failed.")
    end
  end
end